{"version":3,"sources":["Modules/Component/link-menu.js","../../modules/BrowserRouter.js","../../modules/HashRouter.js","../../modules/utils/locationUtils.js","../../modules/Link.js","../../modules/NavLink.js"],"names":["LinkWithPopUp","props","className","label","LinkWithoutPopUp","activeClassName","to","link","LinkComponent","ref","useRef","useState","isOpen","setIsOpen","useOnClickOutside","onClick","showPopup","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","React","Component","resolveToLocation","currentLocation","normalizeToLocation","createLocation","forwardRefShim","C","forwardRef","LinkAnchor","innerRef","navigate","rest","ex","isModifiedEvent","forwardedRef","Link","component","replace","RouterContext","context","history","location","href","method","NavLink","ariaCurrent","activeStyle","classNameProp","exact","isActiveProp","isActive","locationProp","strict","styleProp","style","toLocation","path","escapedPath","match","matchPath","classnames","i","joinClassnames"],"mappings":"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","file":"static/js/18.888888bb.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport function LinkWithPopUp(props) {\r\n  return <span className={props.className}>{props.label}</span>;\r\n}\r\n\r\nexport function LinkWithoutPopUp(props) {\r\n  return (\r\n    <NavLink\r\n      className={props.className}\r\n      activeClassName={props.activeClassName}\r\n      to={props.link}\r\n    >\r\n      {props.label}\r\n    </NavLink>\r\n  );\r\n}\r\n\r\n// Module LinkComponent will render children props\r\n// when it set to use popup menu\r\nexport default function LinkComponent(props) {\r\n  const ref = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // Call hook passing in the ref and a function to call on outside click\r\n  useOnClickOutside(ref, () => setIsOpen(false));\r\n  return (\r\n    <span className=\"link-container\" onClick={() => setIsOpen(true)}>\r\n      {props.showPopup ? (\r\n        <LinkWithPopUp {...props} />\r\n      ) : (\r\n        <LinkWithoutPopUp {...props} />\r\n      )}\r\n      {isOpen ? (\r\n        <div\r\n          ref={ref}\r\n          className={isOpen ? \"popup-area popup-area-active\" : \"popup-area\"}\r\n        >\r\n          {props.showPopup}\r\n        </div>\r\n      ) : null}\r\n    </span>\r\n  );\r\n}\r\n\r\n// Click outside area handling\r\nexport function useOnClickOutside(ref, handler) {\r\n  useEffect(\r\n    () => {\r\n      const listener = event => {\r\n        // Do nothing if clicking ref's element or descendent elements\r\n        if (!ref.current || ref.current.contains(event.target)) {\r\n          return;\r\n        }\r\n\r\n        handler(event);\r\n      };\r\n\r\n      document.addEventListener(\"mousedown\", listener);\r\n      document.addEventListener(\"touchstart\", listener);\r\n\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", listener);\r\n        document.removeEventListener(\"touchstart\", listener);\r\n      };\r\n    },\r\n    // Add ref and handler to effect dependencies\r\n    // It's worth noting that because passed in handler is a new ...\r\n    // ... function on every render that will cause this effect ...\r\n    // ... callback/cleanup to run every render. It's not a big deal ...\r\n    // ... but to optimize you can wrap handler in useCallback before ...\r\n    // ... passing it into this hook.\r\n    [ref, handler]\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport { resolveToLocation, normalizeToLocation } from \"./utils/locationUtils\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const method = replace ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link\";\nimport { resolveToLocation, normalizeToLocation } from \"./utils/locationUtils\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\",\n      activeStyle,\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          const className = isActive\n            ? joinClassnames(classNameProp, activeClassName)\n            : classNameProp;\n          const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    strict: PropTypes.bool,\n    style: PropTypes.object\n  };\n}\n\nexport default NavLink;\n"],"sourceRoot":""}