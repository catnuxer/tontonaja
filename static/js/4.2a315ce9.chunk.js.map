{"version":3,"sources":["Modules/Component/link-menu.js","Modules/Movies/movies-thumbnail.js","Modules/Home/home-carousel.js","Modules/Movies/movies-suggestion.js","Modules/Genres/genres-helper.js","Modules/Movies/movies-section.js","Modules/Home/index.js"],"names":["LinkWithPopUp","props","className","label","LinkWithoutPopUp","activeClassName","to","link","LinkComponent","ref","useRef","useState","isOpen","setIsOpen","useOnClickOutside","onClick","showPopup","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","MovieLoadingThumbnail","node","i","push","key","toString","React","memo","vote","title","backdrop","src","prevProps","nextProps","ChildrenCarousel","item","overview","backdrop_path","CarouselComponent","state","autoPlay","timer","animation","indicators","autoBind","this","banner","movie_loaded","loading","map","index","bind","Component","connect","Movies","MovieThumbnail","lazy","MovieThumbnailPopup","MovieChildComponent","movie","createRef","movieInfo","setMovieInfo","handleClick","useCallback","handleWatchMovie","console","log","fallback","movieData","bottomPosition","window","pageYOffset","vote_average","Genres","suggestion","genreMovie","genre","genres","input","result","length","filter","id","getGenreName","genre_ids","genre_movie","PanelSection","setMovieSuggestionGenre","menu","children","ChildSectionMovie","Children","child","data","Countries","country","countryLoaded","genreLoaded","movieLoaded"],"mappings":"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","file":"static/js/4.2a315ce9.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport function LinkWithPopUp(props) {\r\n  return <span className={props.className}>{props.label}</span>;\r\n}\r\n\r\nexport function LinkWithoutPopUp(props) {\r\n  return (\r\n    <NavLink\r\n      className={props.className}\r\n      activeClassName={props.activeClassName}\r\n      to={props.link}\r\n    >\r\n      {props.label}\r\n    </NavLink>\r\n  );\r\n}\r\n\r\n// Module LinkComponent will render children props\r\n// when it set to use popup menu\r\nexport default function LinkComponent(props) {\r\n  const ref = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // Call hook passing in the ref and a function to call on outside click\r\n  useOnClickOutside(ref, () => setIsOpen(false));\r\n  return (\r\n    <span className=\"link-container\" onClick={() => setIsOpen(true)}>\r\n      {props.showPopup ? (\r\n        <LinkWithPopUp {...props} />\r\n      ) : (\r\n        <LinkWithoutPopUp {...props} />\r\n      )}\r\n      {isOpen ? (\r\n        <div\r\n          ref={ref}\r\n          className={isOpen ? \"popup-area popup-area-active\" : \"popup-area\"}\r\n        >\r\n          {props.showPopup}\r\n        </div>\r\n      ) : null}\r\n    </span>\r\n  );\r\n}\r\n\r\n// Click outside area handling\r\nexport function useOnClickOutside(ref, handler) {\r\n  useEffect(\r\n    () => {\r\n      const listener = event => {\r\n        // Do nothing if clicking ref's element or descendent elements\r\n        if (!ref.current || ref.current.contains(event.target)) {\r\n          return;\r\n        }\r\n\r\n        handler(event);\r\n      };\r\n\r\n      document.addEventListener(\"mousedown\", listener);\r\n      document.addEventListener(\"touchstart\", listener);\r\n\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", listener);\r\n        document.removeEventListener(\"touchstart\", listener);\r\n      };\r\n    },\r\n    // Add ref and handler to effect dependencies\r\n    // It's worth noting that because passed in handler is a new ...\r\n    // ... function on every render that will cause this effect ...\r\n    // ... callback/cleanup to run every render. It's not a big deal ...\r\n    // ... but to optimize you can wrap handler in useCallback before ...\r\n    // ... passing it into this hook.\r\n    [ref, handler]\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./movies-thumbnail.scss\";\r\n\r\n// Check props use to memo\r\nconst propsMovieThumbnail = (prevProps, nextProps) => {\r\n  return prevProps.title === nextProps.title;\r\n};\r\n\r\n// Render the movie thumbnails component\r\nfunction MovieThumbnail({ onClick, vote, title, backdrop }) {\r\n  return (\r\n    <div className=\"movie-thumbnail\" onClick={onClick}>\r\n      <span className=\"movie-thumbnail-vote\">{vote}</span>\r\n      <div className=\"shadow\">\r\n        <span className=\"movie-thumbnail-title\">{title}</span>\r\n      </div>\r\n      <img\r\n        className=\"movie-thumnail-backdrop\"\r\n        src={`https://image.tmdb.org/t/p/original/${backdrop}`}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Component Loading Movie Thumbnail\r\nexport const MovieLoadingThumbnail = () => {\r\n  const node = [];\r\n  for (let i = 0; i < 10; i++) {\r\n    node.push(\r\n      <div className=\"movie-thumbnail-loading\" key={i.toString()}></div>\r\n    );\r\n  }\r\n  return node;\r\n};\r\n\r\nMovieThumbnail.propTypes = {\r\n  onClick: PropTypes.func,\r\n  vote: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  backdrop: PropTypes.string\r\n};\r\n\r\nexport default React.memo(MovieThumbnail, propsMovieThumbnail);\r\n","import React from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport autoBind from \"auto-bind\";\r\nimport \"./home-carousel.scss\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction ChildrenCarousel(props) {\r\n  return (\r\n    <div className=\"carousel-banner\">\r\n      <div className=\"carousel-content\" onClick={props.onClick}>\r\n        <h1 className=\"carousel-title\">\r\n          {props.item && props.item.title ? props.item.title : \"\"}\r\n        </h1>\r\n        <p className=\"carousel-caption\">\r\n          {props.item && props.item.overview ? props.item.overview : \"\"}\r\n        </p>\r\n        <button className=\"carousel-button\">Watch Now</button>\r\n      </div>\r\n      {props.item.backdrop_path && (\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original/${props.item.backdrop_path}`}\r\n          className=\"carousel-image\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nclass CarouselComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      autoPlay: true,\r\n      timer: 1000,\r\n      animation: \"slide\",\r\n      indicators: false\r\n    };\r\n\r\n    autoBind(this);\r\n  }\r\n\r\n  loading() {\r\n    return <div className=\"carousel-loading\"></div>;\r\n  }\r\n\r\n  render() {\r\n    const { banner, movie_loaded } = this.props;\r\n    if (movie_loaded) return this.loading();\r\n    return (\r\n      <Carousel\r\n        className=\"carousel\"\r\n        autoPlay={this.state.autoPlay}\r\n        timer={this.state.timer}\r\n        animation={this.state.animation}\r\n        indicators={this.state.indicators}\r\n      >\r\n        {banner.map((item, index) => {\r\n          return (\r\n            <ChildrenCarousel\r\n              item={item}\r\n              key={index}\r\n              onClick={this.props.onClick.bind(this)}\r\n            />\r\n          );\r\n        })}\r\n      </Carousel>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapToProps = ({ Movies }) => {\r\n  const { banner, movie_loaded } = Movies;\r\n  return { banner, movie_loaded };\r\n};\r\n\r\nexport default connect(mapToProps)(CarouselComponent);\r\n","import React, { useCallback, lazy, Suspense, useState, createRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { MovieLoadingThumbnail } from \"./movies-thumbnail\";\r\nimport { useOnClickOutside } from \"../Component/link-menu\";\r\nimport \"./movies-thumbnail.scss\";\r\nimport { getGenreName } from \"../Genres/genres-helper\";\r\n\r\n// Lazy imported component\r\nexport const MovieThumbnail = lazy(() => import(\"./movies-thumbnail\"));\r\nexport const MovieThumbnailPopup = lazy(() =>\r\n  import(\"./movies-thumbnail-popup\")\r\n);\r\n\r\n// Render child component thumbnail movie\r\nexport function MovieChildComponent(movie) {\r\n  const ref = createRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [movieInfo, setMovieInfo] = useState({});\r\n  const handleClick = useCallback(() => {\r\n    setIsOpen(true);\r\n    setMovieInfo(movie);\r\n  });\r\n  const handleWatchMovie = useCallback(() => {\r\n    console.log(\"watch movie\");\r\n  });\r\n  // Call hook passing in the ref and a function to call on outside click\r\n  useOnClickOutside(ref, () => setIsOpen(false));\r\n\r\n  return (\r\n    <Suspense fallback={<MovieLoadingThumbnail />}>\r\n      <div className=\"movie-thumbnail-container\">\r\n        {isOpen && (\r\n          <MovieThumbnailPopup\r\n            ref={ref}\r\n            movieData={movieInfo}\r\n            bottomPosition={window.pageYOffset}\r\n            onClick={handleWatchMovie}\r\n          />\r\n        )}\r\n        <MovieThumbnail\r\n          title={movie.title}\r\n          onClick={() => handleClick()}\r\n          backdrop={movie.backdrop_path}\r\n          vote={movie.vote_average}\r\n        />\r\n      </div>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\n// Produce Movie Suggestion Integrated with\r\n// reducers state Movies and Genres\r\n// genre_ids on movie object will render based\r\n// click event ThumbnailMovie Component\r\nfunction ConnectedMovieSuggestion({ movie_loaded, suggestion, genreMovie }) {\r\n  if (movie_loaded) return <MovieLoadingThumbnail />;\r\n  return suggestion.map((item, index) => {\r\n    const genre = getGenreName(genreMovie, item.genre_ids);\r\n    item.genre_movie = genre;\r\n    return (\r\n      index < 10 &&\r\n      item.backdrop_path && (\r\n        <MovieChildComponent {...item} key={index.toString()} />\r\n      )\r\n    );\r\n  });\r\n}\r\n\r\nConnectedMovieSuggestion.propTypes = {\r\n  movie_loaded: PropTypes.bool.isRequired,\r\n  suggestion: PropTypes.array.isRequired,\r\n  genreMovie: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapToProp = ({ Movies, Genres }) => {\r\n  const { suggestion, movie_loaded } = Movies;\r\n  const { movie } = Genres;\r\n  const genreMovie = movie;\r\n  return { suggestion, movie_loaded, genreMovie };\r\n};\r\n\r\nexport default connect(mapToProp)(ConnectedMovieSuggestion);\r\n","/**\r\n * Produce as an array related with\r\n * state movies from reducers Genres and\r\n * input from array genre_ids of movie objects\r\n * @param {Array} genres\r\n * @param {Array} input\r\n */\r\nexport const getGenreName = (genres, input) => {\r\n  const result = [];\r\n\r\n  if (input.length === 0) return false;\r\n  if (input.length === 1) return genres.filter(genre => genre.id === input[0]);\r\n  for (let i = 0; i < input.length; i++) {\r\n    genres.map(item => {\r\n      if (item.id === input[i]) {\r\n        result.push(item);\r\n      }\r\n    });\r\n  }\r\n  return result;\r\n};\r\n","import React, { lazy } from \"react\";\r\nimport \"../Component/container.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { setMovieSuggestionGenre } from \"./movies-action\";\r\nimport \"./movies-section.scss\";\r\nconst PanelSection = lazy(() => import(\"../Component/panel-section\"));\r\n\r\n/**\r\n * Produce element child component with title\r\n * and panel menu based on genre movies\r\n * @param {String} title\r\n * @param {Node} children\r\n */\r\nfunction Section(props) {\r\n  const { title, menu, children, setMovieSuggestionGenre } = props;\r\n  const ChildSectionMovie = React.Children.map(children, child => {\r\n    return <div className=\"section-movie\">{child}</div>;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <PanelSection\r\n        title={title}\r\n        menu={menu}\r\n        onClick={data => setMovieSuggestionGenre(data)}\r\n      />\r\n      {ChildSectionMovie}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapToProps = ({}) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapToProps, { setMovieSuggestionGenre })(Section);\r\n","import React, { useEffect, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { countryLoaded } from \"../Countries/countries-action\";\r\nimport { genreLoaded } from \"../Genres/genres-action\";\r\nimport { movieLoaded } from \"../Movies/movies-action\";\r\nimport CarouselComponent from \"./home-carousel\";\r\nimport MovieSuggestion from \"../Movies/movies-suggestion\";\r\nimport MovieSection from \"../Movies/movies-section\";\r\nimport \"../../CoreScss/global.scss\";\r\n\r\nfunction Home(props) {\r\n  useEffect(() => {\r\n    props.countryLoaded();\r\n    props.genreLoaded();\r\n    props.movieLoaded();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <CarouselComponent onClick={() => console.log(\"Click Caousel\")} />\r\n      <MovieSection title={\"Suggestion Movie\"} menu={props.genre}>\r\n        <MovieSuggestion />\r\n      </MovieSection>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ Countries, Genres }) => {\r\n  const { country } = Countries;\r\n  const { movie } = Genres;\r\n  const genre = movie;\r\n  return { country, genre };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  countryLoaded,\r\n  genreLoaded,\r\n  movieLoaded\r\n})(Home);\r\n"],"sourceRoot":""}