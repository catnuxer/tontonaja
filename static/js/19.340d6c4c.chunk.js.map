{"version":3,"sources":["Modules/Search/search-component.js","Modules/Component/link-menu.js"],"names":["SearchPopUp","lazy","connect","Search","Genres","loading","data","genres","movie","searchMovie","getDetailMovie","position","history","useHistory","ref","createRef","inputRef","useState","visible","setVisible","handleOnChange","useCallback","event","current","focus","value","target","handleClickResult","item","id","push","pathname","location","search","state","movieId","useOnClickOutside","className","placeholder","onClick","onChange","genre","onClickResult","LinkWithPopUp","props","label","LinkWithoutPopUp","activeClassName","to","link","LinkComponent","useRef","isOpen","setIsOpen","showPopup","handler","useEffect","listener","contains","document","addEventListener","removeEventListener"],"mappings":"6NAQMA,EAAcC,gBAAK,kBAAM,wDAmEhBC,uBANI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAG5B,MAAO,CAAEC,QAFiBF,EAAlBE,QAEUC,KAFQH,EAATG,KAEOC,OADNH,EAAVI,SAIyB,CAAEC,gBAAaC,oBAAnCR,EAhEf,YAOI,IANFS,EAMC,EANDA,SACAL,EAKC,EALDA,KACAD,EAIC,EAJDA,QACAI,EAGC,EAHDA,YACAF,EAEC,EAFDA,OACAG,EACC,EADDA,eAEIE,EAAUC,cACRC,EAAMC,sBACNC,EAAWD,sBAHhB,EAI6BE,oBAAS,GAJtC,mBAIMC,EAJN,KAIeC,EAJf,KAWKC,EAAiBC,uBAAY,SAAAC,GACjCN,EAASO,QAAQC,QACjB,IAAMC,EAAQH,EAAMI,OAAOD,MAC3BhB,EAAYgB,MAGRE,EAAoBN,uBAAY,SAAAO,GACpClB,EAAekB,EAAKC,IACpBV,GAAW,GACXP,EAAQkB,KAAK,CACXC,SAAS,GAAD,OAAKC,IAAL,iBACRC,OAAO,OAAD,OAASL,EAAKC,IACpBK,MAAO,CAAEC,QAASP,EAAKC,SAM3B,OAFAO,4BAAkBtB,GAAK,kBAAMK,GAAW,MAGtC,yBAAKkB,UAAS,oBACZ,2BACEC,YAAY,eACZD,UAAS,uCAAkC1B,GAC3C4B,QA5Bc,WAClBvB,EAASO,QAAQC,QACjBL,GAAW,IA2BPqB,SAAUpB,EACVN,IAAKE,IAENE,GACC,kBAAClB,EAAD,CACEc,IAAKA,EACLR,KAAMA,EACND,QAASA,EACToC,MAAOlC,EACPmC,cAAe,SAAAd,GAAI,OAAID,EAAkBC,W,oQC3D5C,SAASe,EAAcC,GAC5B,OAAO,0BAAMP,UAAWO,EAAMP,WAAYO,EAAMC,OAG3C,SAASC,EAAiBF,GAC/B,OACE,kBAAC,IAAD,CACEP,UAAWO,EAAMP,UACjBU,gBAAiBH,EAAMG,gBACvBC,GAAIJ,EAAMK,MAETL,EAAMC,OAOE,SAASK,EAAcN,GACpC,IAAM9B,EAAMqC,mBAD+B,EAEflC,oBAAS,GAFM,mBAEpCmC,EAFoC,KAE5BC,EAF4B,KAK3C,OADAjB,EAAkBtB,GAAK,kBAAMuC,GAAU,MAErC,0BAAMhB,UAAU,iBAAiBE,QAAS,kBAAMc,GAAU,KACvDT,EAAMU,UACL,kBAACX,EAAkBC,GAEnB,kBAACE,EAAqBF,GAEvBQ,EACC,yBACEtC,IAAKA,EACLuB,UAAWe,EAAS,+BAAiC,cAEpDR,EAAMU,WAEP,MAMH,SAASlB,EAAkBtB,EAAKyC,GACrCC,qBACE,WACE,IAAMC,EAAW,SAAAnC,GAEVR,EAAIS,UAAWT,EAAIS,QAAQmC,SAASpC,EAAMI,SAI/C6B,EAAQjC,IAMV,OAHAqC,SAASC,iBAAiB,YAAaH,GACvCE,SAASC,iBAAiB,aAAcH,GAEjC,WACLE,SAASE,oBAAoB,YAAaJ,GAC1CE,SAASE,oBAAoB,aAAcJ,MAS/C,CAAC3C,EAAKyC","file":"static/js/19.340d6c4c.chunk.js","sourcesContent":["import React, { useState, useCallback, createRef, lazy } from \"react\";\r\nimport \"./search-component.scss\";\r\nimport { useOnClickOutside } from \"../Component/link-menu\";\r\nimport { connect } from \"react-redux\";\r\nimport { searchMovie } from \"./search-action\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getDetailMovie } from \"../Movies/movies-action\";\r\nimport { location } from \"../../Env\";\r\nconst SearchPopUp = lazy(() => import(\"./search-popup-component\"));\r\n\r\n// Search Component\r\nfunction SearchComponent({\r\n  position,\r\n  data,\r\n  loading,\r\n  searchMovie,\r\n  genres,\r\n  getDetailMovie\r\n}) {\r\n  let history = useHistory();\r\n  const ref = createRef();\r\n  const inputRef = createRef();\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    inputRef.current.focus();\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOnChange = useCallback(event => {\r\n    inputRef.current.focus();\r\n    const value = event.target.value;\r\n    searchMovie(value);\r\n  });\r\n\r\n  const handleClickResult = useCallback(item => {\r\n    getDetailMovie(item.id);\r\n    setVisible(false);\r\n    history.push({\r\n      pathname: `${location}/movie/detail`,\r\n      search: `?id=${item.id}`,\r\n      state: { movieId: item.id }\r\n    });\r\n  });\r\n\r\n  useOnClickOutside(ref, () => setVisible(false));\r\n\r\n  return (\r\n    <div className={`search-container`}>\r\n      <input\r\n        placeholder=\"Search Movie\"\r\n        className={`search-input search-position-${position}`}\r\n        onClick={handleClick}\r\n        onChange={handleOnChange}\r\n        ref={inputRef}\r\n      ></input>\r\n      {visible && (\r\n        <SearchPopUp\r\n          ref={ref}\r\n          data={data}\r\n          loading={loading}\r\n          genre={genres}\r\n          onClickResult={item => handleClickResult(item)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapToProps = ({ Search, Genres }) => {\r\n  const { loading, data } = Search;\r\n  const { movie } = Genres;\r\n  return { loading, data, genres: movie };\r\n};\r\n\r\nexport default connect(mapToProps, { searchMovie, getDetailMovie })(\r\n  SearchComponent\r\n);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport function LinkWithPopUp(props) {\r\n  return <span className={props.className}>{props.label}</span>;\r\n}\r\n\r\nexport function LinkWithoutPopUp(props) {\r\n  return (\r\n    <NavLink\r\n      className={props.className}\r\n      activeClassName={props.activeClassName}\r\n      to={props.link}\r\n    >\r\n      {props.label}\r\n    </NavLink>\r\n  );\r\n}\r\n\r\n// Module LinkComponent will render children props\r\n// when it set to use popup menu\r\nexport default function LinkComponent(props) {\r\n  const ref = useRef();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // Call hook passing in the ref and a function to call on outside click\r\n  useOnClickOutside(ref, () => setIsOpen(false));\r\n  return (\r\n    <span className=\"link-container\" onClick={() => setIsOpen(true)}>\r\n      {props.showPopup ? (\r\n        <LinkWithPopUp {...props} />\r\n      ) : (\r\n        <LinkWithoutPopUp {...props} />\r\n      )}\r\n      {isOpen ? (\r\n        <div\r\n          ref={ref}\r\n          className={isOpen ? \"popup-area popup-area-active\" : \"popup-area\"}\r\n        >\r\n          {props.showPopup}\r\n        </div>\r\n      ) : null}\r\n    </span>\r\n  );\r\n}\r\n\r\n// Click outside area handling\r\nexport function useOnClickOutside(ref, handler) {\r\n  useEffect(\r\n    () => {\r\n      const listener = event => {\r\n        // Do nothing if clicking ref's element or descendent elements\r\n        if (!ref.current || ref.current.contains(event.target)) {\r\n          return;\r\n        }\r\n\r\n        handler(event);\r\n      };\r\n\r\n      document.addEventListener(\"mousedown\", listener);\r\n      document.addEventListener(\"touchstart\", listener);\r\n\r\n      return () => {\r\n        document.removeEventListener(\"mousedown\", listener);\r\n        document.removeEventListener(\"touchstart\", listener);\r\n      };\r\n    },\r\n    // Add ref and handler to effect dependencies\r\n    // It's worth noting that because passed in handler is a new ...\r\n    // ... function on every render that will cause this effect ...\r\n    // ... callback/cleanup to run every render. It's not a big deal ...\r\n    // ... but to optimize you can wrap handler in useCallback before ...\r\n    // ... passing it into this hook.\r\n    [ref, handler]\r\n  );\r\n}\r\n"],"sourceRoot":""}