{"version":3,"sources":["Modules/People/people-detail.js","Modules/People/index.js"],"names":["PeopleDetailHead","lazy","PeopleCreditInfo","connect","People","selected","detail","name","profile_path","birthday","place_of_birth","known_for_department","biography","className","fallback","profilePath","placeDob","department","setPeopleDetail","withRouter","props","peopleId","URLSearchParams","location","search","get","useEffect","a","uri","httpGet","response","status","json","history","replace","fetchDetailPeople","exact","path","render"],"mappings":"0NAKMA,G,aAAmBC,gBAAK,kBAAM,mCAC9BC,EAAmBD,gBAAK,kBAAM,iCAkCpC,IAKeE,eALK,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAErB,MAAO,CAAEC,SADoBD,EAArBC,SACWC,OADUF,EAAXE,UAILH,EArCf,YAA4C,EAApBE,SAAqB,IAAXC,EAAU,EAAVA,OAE9BC,EAMED,EANFC,KACAC,EAKEF,EALFE,aACAC,EAIEH,EAJFG,SACAC,EAGEJ,EAHFI,eACAC,EAEEL,EAFFK,qBACAC,EACEN,EADFM,UAEF,OACE,yBAAKC,UAAU,2BACb,yBAAKA,UAAU,qBACb,kBAAC,WAAD,CAAUC,SAAU,0DAClB,kBAACd,EAAD,CACEO,KAAMA,EACNQ,YAAaP,EACbC,SAAUA,EACVO,SAAUN,EACVO,WAAYN,EACZC,UAAWA,MAIjB,yBAAKC,UAAU,sBACb,kBAAC,WAAD,CAAUC,SAAU,0DAClB,kBAACZ,EAAD,Y,QCcKC,sBAAQ,KAAM,CAAEe,qBAAhBf,CAAmCgB,aAlClD,SAAgBC,GACd,IAAMC,EAAW,IAAIC,gBAAgBF,EAAMG,SAASC,QAAQC,IAAI,MAgBhE,OAfAC,qBAAU,WAAM,4CACd,gCAAAC,EAAA,6DACQC,EADR,oBAC2BP,GAD3B,SAEyBQ,YAAQD,GAFjC,UAG0B,OADlBE,EAFR,QAGeC,OAHf,iCAIqBD,EAASE,OAJ9B,OAIQA,EAJR,OAKIZ,EAAMF,gBAAgBc,GAL1B,wBAQIZ,EAAMa,QAAQC,QAAd,UAAyBX,IAAzB,UARJ,6CADc,uBAAC,WAAD,wBAYdY,KACC,CAACd,IAGF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEe,OAAK,EACLC,KAAI,UAAKd,IAAL,WACJe,OAAQ,kBACN,kBAAC,WAAD,CAAUxB,SAAU,yCAClB,kBAAC,EAAD,iB","file":"static/js/11.71d9624e.chunk.js","sourcesContent":["import React, { lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../Component/container.scss\";\r\nimport \"./people-detail.scss\";\r\n\r\nconst PeopleDetailHead = lazy(() => import(\"./people-detail-head\"));\r\nconst PeopleCreditInfo = lazy(() => import(\"./people-credit-info\"));\r\n\r\nfunction PeopleDetail({ selected, detail }) {\r\n  const {\r\n    name,\r\n    profile_path,\r\n    birthday,\r\n    place_of_birth,\r\n    known_for_department,\r\n    biography\r\n  } = detail;\r\n  return (\r\n    <div className=\"container people-detail\">\r\n      <div className=\"people-detail-bio\">\r\n        <Suspense fallback={<div>Loading PeopleDetailHead</div>}>\r\n          <PeopleDetailHead\r\n            name={name}\r\n            profilePath={profile_path}\r\n            birthday={birthday}\r\n            placeDob={place_of_birth}\r\n            department={known_for_department}\r\n            biography={biography}\r\n          />\r\n        </Suspense>\r\n      </div>\r\n      <div className=\"credits-detail-bio\">\r\n        <Suspense fallback={<div>Loading PeopleCreditInfo</div>}>\r\n          <PeopleCreditInfo />\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapTopProps = ({ People }) => {\r\n  const { selected, detail } = People;\r\n  return { selected, detail };\r\n};\r\n\r\nexport default connect(mapTopProps)(PeopleDetail);\r\n","import React, { Suspense, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\nimport { location } from \"../../Env\";\r\nimport { httpGet } from \"../../Helper/HttpFetch\";\r\nimport PeopleDetail from \"./people-detail\";\r\nimport { setPeopleDetail } from \"./people-actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction People(props) {\r\n  const peopleId = new URLSearchParams(props.location.search).get(\"id\");\r\n  useEffect(() => {\r\n    async function fetchDetailPeople() {\r\n      const uri = `/3/person/${peopleId}`;\r\n      const response = await httpGet(uri);\r\n      if (response.status === 200) {\r\n        let json = await response.json();\r\n        props.setPeopleDetail(json);\r\n      } else {\r\n        // Redirect to home if nessesary doesn't match with api\r\n        props.history.replace(`${location}/home`);\r\n      }\r\n    }\r\n    fetchDetailPeople();\r\n  }, [peopleId]);\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={`${location}/people`}\r\n          render={() => (\r\n            <Suspense fallback={<div>Loading</div>}>\r\n              <PeopleDetail />\r\n            </Suspense>\r\n          )}\r\n        />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default connect(null, { setPeopleDetail })(withRouter(People));\r\n"],"sourceRoot":""}