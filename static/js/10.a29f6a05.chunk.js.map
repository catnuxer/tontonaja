{"version":3,"sources":["Modules/Movies/movies-detail.js"],"names":["MovieVideo","lazy","Breadcrumbs","MovieOverView","connect","router","detail","Movies","loaded","loading","getDetailMovie","props","movieId","location","query","id","useEffect","className","fallback","title","backdrop","backdrop_path","video","movie"],"mappings":"yGAAA,0CAMMA,GANN,aAMmBC,gBAAK,kBAAM,mCACxBC,EAAcD,gBAAK,kBAAM,iCACzBE,EAAgBF,gBAAK,kBAAM,kCA2ClBG,uBANS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OACjBC,EADsC,EAAbC,OACzBD,OACR,OAAsB,IAAlBA,EAAOE,OAAyB,CAAEC,SAAS,EAAMJ,SAAQC,UACtD,CAAED,SAAQC,YAGqB,CAAEI,oBAA3BN,EAzCf,SAAqBO,GAAQ,IACnBF,EAA4CE,EAA5CF,QAASH,EAAmCK,EAAnCL,OAAQD,EAA2BM,EAA3BN,OAAQK,EAAmBC,EAAnBD,eAC3BE,EAAUP,EAAOQ,SAASC,MAAMC,GAOtC,OANAC,qBAAU,WACJP,GACFC,EAAeE,KAEhB,CAACA,IAEAH,EAAgB,qDAElB,yBAAKQ,UAAU,aACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,WACb,kBAAC,WAAD,CAAUC,SAAU,sDAClB,kBAAChB,EAAD,CAAaiB,MAAOb,EAAOa,SAE7B,kBAAC,WAAD,CAAUD,SAAU,qDAClB,kBAAClB,EAAD,CACEoB,SAAUd,EAAOe,cACjBC,MAAOhB,EAAOgB,MACdH,MAAOb,EAAOa,WAKtB,yBAAKF,UAAU,kBACb,kBAAC,WAAD,CAAUC,SAAU,wDAClB,kBAACf,EAAD,CAAeoB,MAAOjB,W","file":"static/js/10.a29f6a05.chunk.js","sourcesContent":["import React, { useEffect, lazy, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDetailMovie } from \"./movies-action\";\r\nimport \"../Component/container.scss\";\r\nimport \"./movies-detail.scss\";\r\n\r\nconst MovieVideo = lazy(() => import(\"./movies-detail-video\"));\r\nconst Breadcrumbs = lazy(() => import(\"../Component/breadcrumbs\"));\r\nconst MovieOverView = lazy(() => import(\"./movies-detail-overview\"));\r\n\r\nfunction MovieDetail(props) {\r\n  const { loading, detail, router, getDetailMovie } = props;\r\n  const movieId = router.location.query.id;\r\n  useEffect(() => {\r\n    if (loading) {\r\n      getDetailMovie(movieId);\r\n    }\r\n  }, [movieId]);\r\n\r\n  if (loading) return <span>Loading MovieDetail</span>;\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"container-video\">\r\n        <div className=\"wrapper\">\r\n          <Suspense fallback={<span>Loading Breadcrumbs</span>}>\r\n            <Breadcrumbs title={detail.title} />\r\n          </Suspense>\r\n          <Suspense fallback={<span>Loading MovieVideo</span>}>\r\n            <MovieVideo\r\n              backdrop={detail.backdrop_path}\r\n              video={detail.video}\r\n              title={detail.title}\r\n            />\r\n          </Suspense>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-info\">\r\n        <Suspense fallback={<span>Loading MovieOverView</span>}>\r\n          <MovieOverView movie={detail} />\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ router, Movies }) => {\r\n  const { detail } = Movies;\r\n  if (detail.loaded === false) return { loading: true, router, detail };\r\n  return { router, detail };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getDetailMovie })(MovieDetail);\r\n"],"sourceRoot":""}