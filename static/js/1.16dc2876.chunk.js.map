{"version":3,"sources":["Modules/Component/breadcrumbs.js"],"names":["createLink","args","start","end","node","i","item","push","length","join","withRouter","props","param","location","pathname","split","handleClick","useCallback","loc","history","replace","child","link","key","toString","className","onClick","title"],"mappings":"wGAAA,oDAMA,SAASA,EAAWC,EAAMC,EAAOC,GAE/B,IADA,IAAMC,EAAO,GACJC,EAAIH,EAAOG,GAAKF,EAAKE,IAAK,CACjC,IAAMC,EAAmB,cAAZL,EAAKI,GAAqB,OAASJ,EAAKI,GACrDD,EAAKG,KAAKD,GAEZ,OAAIF,EAAKI,OAAS,EAAU,OACrBJ,EAAKK,KAAK,KAyCJC,uBAjCf,SAAqBC,GASnB,IARA,IACMC,EADWD,EAAME,SAASC,SACTC,MAAM,KACvBC,EAAcC,uBAAY,SAAAC,GAC9BP,EAAMQ,QAAQC,QAAd,UAAyBP,IAAzB,YAAqCK,OAGjCG,EAAQ,GAELhB,EAAI,EAAGA,EAAIO,EAAMJ,OAAQH,IACf,KAAbO,EAAMP,IAAY,WACpB,IAAMC,EAAoB,cAAbM,EAAMP,GAAqB,OAASO,EAAMP,GACjDiB,EAAOtB,EAAWY,EAAO,EAAGP,GAClCgB,EAAMd,KACJ,4BACEgB,IAAKlB,EAAEmB,WACPC,UAAU,OACVC,QAAS,kBAAMV,EAAYM,KAE1BhB,IATe,GAexB,OACE,yBAAKmB,UAAU,eACb,wBAAIA,UAAU,SAASd,EAAMgB,OAC7B,yBAAKF,UAAU,SAASJ,Q","file":"static/js/1.16dc2876.chunk.js","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport \"./breadcrumbs.scss\";\r\nimport { location } from \"../../Env\";\r\nimport { withRouter } from \"react-router\";\r\n\r\n// Create link uri to handle onClick button breadcrumbs\r\nfunction createLink(args, start, end) {\r\n  const node = [];\r\n  for (let i = start; i <= end; i++) {\r\n    const item = args[i] === \"tontonaja\" ? \"home\" : args[i];\r\n    node.push(item);\r\n  }\r\n  if (node.length < 1) return \"home\";\r\n  return node.join(\"/\");\r\n}\r\n\r\n// Breadchrumbs Component with child link\r\n// based on location pathname\r\n// avoiding useHistory hook its not good performance\r\n// probably there is something bugs, we can use withRouter\r\n// HOC from react-router-dom to replace the history location\r\nfunction Breadcrumbs(props) {\r\n  const pathname = props.location.pathname;\r\n  const param = pathname.split(\"/\");\r\n  const handleClick = useCallback(loc => {\r\n    props.history.replace(`${location}/${loc}`);\r\n  });\r\n\r\n  const child = [];\r\n\r\n  for (let i = 0; i < param.length; i++) {\r\n    if (param[i] !== \"\") {\r\n      const item = param[i] === \"tontonaja\" ? \"home\" : param[i];\r\n      const link = createLink(param, 2, i);\r\n      child.push(\r\n        <button\r\n          key={i.toString()}\r\n          className=\"link\"\r\n          onClick={() => handleClick(link)}\r\n        >\r\n          {item}\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"breadcrumbs\">\r\n      <h3 className=\"title\">{props.title}</h3>\r\n      <div className=\"child\">{child}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Breadcrumbs);\r\n"],"sourceRoot":""}