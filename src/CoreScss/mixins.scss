/*
* Responsive Break Point
*/

@import "./variable.scss";

@mixin breakpoint($point) {
  @if $point == large-desktop {
    @media (min-width: 1903px) {
      @content;
    }
  }
  @if $point == desktop {
    @media (min-width: 1280px) {
      @content;
    }
  } @else if $point == laptop {
    @media (min-width: 900px) {
      @content;
    }
  } @else if $point == tablet {
    @media (min-width: 768px) {
      @content;
    }
  } @else if $point == mobile {
    @media (min-width: 320px) and (max-width: 720px) {
      @content;
    }
  }
}

@mixin transition($property, $duration) {
  -webkit-transition: $property $duration ease;
  -moz-transition: $property $duration ease;
  transition: $property $duration ease;
}

@mixin rounded($size) {
  -webkit-border-radius: $size;
  -moz-border-radius: $size;
  border-radius: $size;
}

@mixin button {
  width: 100%;
  border: 3px solid $color-primary-light;
  background-color: $color-primary-light;
  padding: $padding;
  font-size: $h4;
  color: $color-white;

  @include transition(background-color, 300ms);
  @include transition(box-shadow, 0.3s);
  @include breakpoint(mobile) {
    font-size: $h5;
  }
  @include rounded(4px);
  &:hover {
    box-shadow: -5px 10px 20px #16191f, 0 2px 2px #2f3a48;
    cursor: pointer;
    color: $color-primary;
    border: 3px solid $color-primary-light;
    background-color: transparent;
  }
}

@mixin button-footer {
  width: 100%;
  background: transparent;
  border: none;
  margin: 0px;
  padding: $padding-small 0px;
  color: $color-grey-light;
  text-align: left;
  font-size: 13px;
  @include transition(color, 300ms);
  @include transition(border, 0.3s);
  &:hover {
    cursor: pointer;
    color: $color-secondary;
  }
  &:focus {
    outline: 0;
  }
}
